// –ë—É–º–µ—Ä–∞–Ω–≥ —è–≤–ª—è–µ—Ç—Å—è –æ—Ä—É–∂–∏–µ–º.
// –í –¥–∞–ª—å–Ω–µ–π—à–µ–º –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–µ –æ—Ä—É–∂–∏–µ.
// –¢–æ–≥–¥–∞ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å Weapon –∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º!

class Boomerang {
  constructor(position) {
    this.skin = "üåÄ";
    this.position = position;
  }

  fly(enemy, hero) {
    /* console.log("this.position", hero.weapon.position);
    console.log("enemy.position", enemy.position);
    console.log("hero.position", hero.position); */

    if (hero.weapon.position < enemy.position - 2 && [
      "üëæ",
      "üëπ",
      "üëª",
      "üëΩ",
      "üëø",
      "üí©",
      "ü§°",
      "ü§∫",
      "üßõ",
      "üßü",
      "üéÉ",
    ].includes(enemy.skin)) {
      this.moveRight();

      setTimeout(() => {
        this.fly(enemy, hero);
      }, 50);
    } else if (this.position === enemy.position - 2) {
      hero.weapon.position -= 2;
      enemy.die();
      this.fly(enemy, hero);
    } else if (this.position > hero.position) {
      this.moveLeft();
      setTimeout(() => {
        this.fly(enemy, hero);
      }, 50);
    }

    // this.moveLeft();
  }

  moveLeft() {
    // –ò–¥—ë–º –≤–ª–µ–≤–æ.
    this.position -= 1;
  }

  moveRight() {
    // –ò–¥—ë–º –≤–ø—Ä–∞–≤–æ.
    this.position += 1;
  }
}

module.exports = Boomerang;
